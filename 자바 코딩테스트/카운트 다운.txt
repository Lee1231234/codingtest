class Solution {
    
    public int[] solution(int target) {
        int[][] map = new int[100001][2];
        map[0][0] =0;
        map[0][1] =0;
        init(map);
        
       
        DP(target,map); //값이 60초과한 값(DP)
      
        int[] answer = map[target];
        return answer;
    
   
    }
    void DP(int target,int[][] map){
        for(int i=61;i<=target;i++){
            // 3가지 경우가 있다   DP[i-50][0] DP[i-60][0]의 값이 같은경우, i-50이 클때 작을때
            if(map[i-50][0]==map[i-60][0]){            
                map[i][0] = map[i-50][0]+1;
                map[i][1] = Math.max(map[i-50][1]+1,map[i-60][1]);                
            }else if(map[i-50][0] > map[i-60][0]){
                map[i][0] = map[i-60][0]+1;
                map[i][1] = map[i-60][1];  
            }else{
                map[i][0] = map[i-50][0]+1;
                map[i][1] = map[i-50][1]+1;  
            }
        }
        
    }
    void init(int[][] map){
       
        for(int i=1;i<=60;i++){
            // 싱글 +불
            if(i<=20||i==50){
                map[i][0] = 1;
                map[i][1] = 1;
            }else if(i<=40&&i%2==0){ // 더블
                map[i][0] = 1;
                map[i][1] = 0;
            }else if(i<=60&&i%3==0){ // 트리플
                map[i][0] = 1;
                map[i][1] = 0;
            }else if(i<=40){ //더블이 아닌 40 이하의 값
                map[i][0] = 2;
                map[i][1] = 2;
            }else if(i>50&&i<=60){// 싱글+불로 표현되는 60이하의 값.
                map[i][0] = 2;
                map[i][1] = 2;
            }else{// 그 외의 값.
                map[i][0] = 2;
                map[i][1] = 1;
            }
        }
    }
}//메모이제이션문제