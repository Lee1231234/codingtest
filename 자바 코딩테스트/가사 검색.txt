import java.util.*;
class Solution {
    public int[] solution(String[] words, String[] queries) {
        Trie front = new Trie();
        Trie back = new Trie();

        for (String word : words) {
            front.insert(word);
            back.insert(reverse(word));
        }
        int[] answer = new int[queries.length];
        for(int i=0;i<queries.length;i++){
            if(queries[i].charAt(0)=='?'){
                answer[i]= back.find(reverse(queries[i]),0);               
            }else{
                answer[i]= front.find(queries[i],0);
            }
          
        }
        return answer;
    }
    class Trie{
        HashMap<Integer,Integer> map = new HashMap<>();
        Trie[] trie = new Trie[26];
        
        int find(String str,int i){
            if(str.charAt(i)=='?') 
                return map.getOrDefault(str.length(),0);
            
            int idx = str.charAt(i) - 'a';
            int num = (trie[idx] == null ? 0 : trie[idx].find(str, i + 1));
            return num;            
        }
        
        void insert(String str){
            Trie node = this;
            int length =str.length();
            map.put(length, map.getOrDefault(length,0)+1);
            for(char ch : str.toCharArray()){
                int a = ch - 'a';
                if(node.trie[a]==null){
                    node.trie[a] = new Trie();
                }
                node = node.trie[a];
                node.map.put(length,node.map.getOrDefault(length,0)+1);
            }
        }
    }
    String reverse(String str){
        return new StringBuilder(str).reverse().toString();
    }
}//트리