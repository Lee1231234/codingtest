class Solution {
    static int val=51;
    public int solution(String begin, String target, String[] words) {
        boolean[] visit = new boolean[words.length];
       
       
        bfs(visit,begin,words,target,0);
        
        if(val==51) return 0;
       
        return val;
    }
    void bfs(boolean[] visit,String begin,String[] words,String target,int depth){
       if (begin.equals(target)) {
            val = Math.min(val, depth);
            return;
        }
        for (int i = 0; i < words.length; i++) {
            if (!visit[i] && check(begin, words[i])) {
                visit[i] = true;
                bfs(visit,words[i], words,target, depth + 1);
                visit[i] = false;
            }
            
        }
    }
    boolean check(String begin,String target){
          int count = 0;
        
        for (int i = 0; i < begin.length(); i++) {
            if (begin.charAt(i) == target.charAt(i)) {
                count++;
            }    
        }
        
        if (count == begin.length() - 1) {
            return true;
        }
        return false;
    }
}