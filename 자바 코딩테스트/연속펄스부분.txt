class Solution {
    public long solution(int[] sequence) {
        long answer = 0;
        long[] dp1 = new long[sequence.length];
        long[] dp2 = new long[sequence.length];
        dp1[0]=sequence[0]*-1;
        dp2[0]=sequence[0];
        answer =Math.max(dp1[0],dp2[0]);
        for(int i=1;i<sequence.length;i++){           
                if(i%2==0){
                    dp1[i]= Math.max(sequence[i]*-1,dp1[i-1]+sequence[i]*-1);
                    dp2[i]= Math.max(sequence[i],dp2[i-1]+sequence[i]);
                }else{
                    dp1[i]= Math.max(sequence[i],dp1[i-1]+sequence[i]);
                    dp2[i]= Math.max(sequence[i]*-1,dp2[i-1]+sequence[i]*-1);
                }
            
           answer =Math.max(answer,Math.max(dp1[i],dp2[i]));
        }
        
        return answer;
    }
}//dp 문제 